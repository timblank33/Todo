{"ast":null,"code":"var _jsxFileName = \"C:\\\\teah\\\\Todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport NewTaskForm from '../new-task-form';\nimport Footer from '../footer';\nimport TaskList from '../task-list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 1;\n    this.state = {\n      todoData: [this.createTaskItem('coffe', 10, 33), this.createTaskItem('coffes'), this.createTaskItem('coffesen')],\n      statusFilter: 'All'\n    };\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArr = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.saveItem = (id, text) => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData].map(item => {\n          if (item.id === id) {\n            item.label = text;\n            item.editing = false;\n          }\n          return item;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.addItem = (text, min, max) => {\n      const newItem = this.createTaskItem(text, min, sec);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.onToggleCompleted = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = {\n          ...oldItem,\n          completed: !oldItem.completed\n        };\n        const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.onToggleEditing = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = {\n          ...oldItem,\n          editing: !oldItem.editing\n        };\n        const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.clearCompleted = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const completed = todoData.filter(item => {\n          return !item.completed;\n        });\n        return {\n          todoData: completed\n        };\n      });\n    };\n    this.filterChange = status => {\n      this.setState({\n        statusFilter: status\n      });\n    };\n  }\n  createTaskItem(label, min, max) {\n    return {\n      label,\n      editing: false,\n      completed: false,\n      checked: false,\n      id: this.maxId++,\n      date: new Date(),\n      min,\n      max\n    };\n  }\n  filterTask(arr, status) {\n    if (status !== 'All') {\n      const newArr = arr.filter(item => {\n        if (status === 'Active') {\n          return !item.completed;\n        }\n        return item.completed;\n      });\n      return newArr;\n    }\n    return arr;\n  }\n  render() {\n    const active = this.state.todoData.filter(item => !item.completed && !item.editing);\n    const {\n      todoData,\n      statusFilter\n    } = this.state;\n    const renderTodo = this.filterTask(todoData, statusFilter);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onItemAdded: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: renderTodo,\n          onDeleted: this.deleteItem,\n          onChange: this.onChange,\n          saveItem: this.saveItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEditing: this.onToggleEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          filterChange: this.filterChange,\n          clearCompleted: this.clearCompleted,\n          active: active.length,\n          statusFilter: statusFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","NewTaskForm","Footer","TaskList","jsxDEV","_jsxDEV","App","constructor","args","maxId","state","todoData","createTaskItem","statusFilter","deleteItem","id","setState","idx","findIndex","el","newArr","slice","saveItem","text","map","item","label","editing","addItem","min","max","newItem","sec","onToggleCompleted","oldItem","completed","onToggleEditing","clearCompleted","filter","filterChange","status","checked","date","Date","filterTask","arr","render","active","renderTodo","className","children","onItemAdded","fileName","_jsxFileName","lineNumber","columnNumber","todos","onDeleted","onChange","length"],"sources":["C:/teah/Todo/src/components/app/app.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport NewTaskForm from '../new-task-form'\nimport Footer from '../footer'\nimport TaskList from '../task-list'\n\nexport default class App extends Component {\n  maxId = 1\n  state = {\n    todoData: [this.createTaskItem('coffe', 10, 33), this.createTaskItem('coffes'), this.createTaskItem('coffesen')],\n    statusFilter: 'All',\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id)\n\n      const newArr = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n\n  saveItem = (id, text) => {\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData].map((item) => {\n        if (item.id === id) {\n          item.label = text\n          item.editing = false\n        }\n        return item\n      })\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n\n  addItem = (text, min, max) => {\n    const newItem = this.createTaskItem(text, min, sec)\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newItem]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n\n  createTaskItem(label, min, max) {\n    return {\n      label,\n      editing: false,\n      completed: false,\n      checked: false,\n      id: this.maxId++,\n      date: new Date(),\n      min,\n      max,\n    }\n  }\n\n  onToggleCompleted = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id)\n      const oldItem = todoData[idx]\n      const newItem = {\n        ...oldItem,\n        completed: !oldItem.completed,\n      }\n      const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n  onToggleEditing = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id)\n      const oldItem = todoData[idx]\n      const newItem = { ...oldItem, editing: !oldItem.editing }\n      const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n  clearCompleted = () => {\n    this.setState(({ todoData }) => {\n      const completed = todoData.filter((item) => {\n        return !item.completed\n      })\n      return {\n        todoData: completed,\n      }\n    })\n  }\n\n  filterChange = (status) => {\n    this.setState({\n      statusFilter: status,\n    })\n  }\n\n  filterTask(arr, status) {\n    if (status !== 'All') {\n      const newArr = arr.filter((item) => {\n        if (status === 'Active') {\n          return !item.completed\n        }\n        return item.completed\n      })\n      return newArr\n    }\n    return arr\n  }\n\n  render() {\n    const active = this.state.todoData.filter((item) => !item.completed && !item.editing)\n    const { todoData, statusFilter } = this.state\n    const renderTodo = this.filterTask(todoData, statusFilter)\n    return (\n      <section className=\"todoapp\">\n        <NewTaskForm onItemAdded={this.addItem} />\n        <section className=\"main\">\n          <TaskList\n            todos={renderTodo}\n            onDeleted={this.deleteItem}\n            onChange={this.onChange}\n            saveItem={this.saveItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEditing={this.onToggleEditing}\n          />\n          <Footer\n            filterChange={this.filterChange}\n            clearCompleted={this.clearCompleted}\n            active={active.length}\n            statusFilter={statusFilter}\n          />\n        </section>\n      </section>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}