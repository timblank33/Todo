{"ast":null,"code":"var _jsxFileName = \"C:\\\\teah\\\\Todo\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport NewTaskForm from '../new-task-form';\nimport Footer from '../footer';\nimport TaskList from '../task-list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 1;\n    this.state = {\n      todoData: [this.createTaskItem('coffe', '10', '11'), this.createTaskItem('coffes'), this.createTaskItem('coffesen')],\n      statusFilter: 'All'\n    };\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArr = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.updateItem = (id, min, sec) => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData].map(item => {\n          if (item.id === id) {\n            item.sec = sec;\n            item.min = min;\n          }\n          return item;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.saveItem = (id, text) => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData].map(item => {\n          if (item.id === id) {\n            item.label = text;\n            item.editing = false;\n          }\n          return item;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.addItem = (text, min, sec) => {\n      const newItem = this.createTaskItem(text, min, sec);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.onToggleCompleted = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        console.log(oldItem);\n        const newItem = {\n          ...oldItem,\n          completed: !oldItem.completed\n        };\n        console.log(newItem);\n        const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.onToggleEditing = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = {\n          ...oldItem,\n          editing: !oldItem.editing\n        };\n        const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n    this.clearCompleted = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const completed = todoData.filter(item => {\n          return !item.completed;\n        });\n        return {\n          todoData: completed\n        };\n      });\n    };\n    this.filterChange = status => {\n      this.setState({\n        statusFilter: status\n      });\n    };\n  }\n  createTaskItem(label, min, sec) {\n    return {\n      label,\n      editing: false,\n      completed: false,\n      checked: false,\n      id: this.maxId++,\n      date: new Date(),\n      min,\n      sec\n    };\n  }\n  filterTask(arr, status) {\n    if (status !== 'All') {\n      const newArr = arr.filter(item => {\n        if (status === 'Active') {\n          return !item.completed;\n        }\n        return item.completed;\n      });\n      return newArr;\n    }\n    return arr;\n  }\n  render() {\n    const active = this.state.todoData.filter(item => !item.completed && !item.editing);\n    const {\n      todoData,\n      statusFilter\n    } = this.state;\n    const renderTodo = this.filterTask(todoData, statusFilter);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onItemAdded: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: renderTodo,\n          updateItem: this.updateItem,\n          onDeleted: this.deleteItem,\n          onChange: this.onChange,\n          saveItem: this.saveItem,\n          onToggleCompleted: this.onToggleCompleted,\n          onToggleEditing: this.onToggleEditing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          filterChange: this.filterChange,\n          clearCompleted: this.clearCompleted,\n          active: active.length,\n          statusFilter: statusFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","NewTaskForm","Footer","TaskList","jsxDEV","_jsxDEV","App","constructor","args","maxId","state","todoData","createTaskItem","statusFilter","deleteItem","id","setState","idx","findIndex","el","newArr","slice","updateItem","min","sec","map","item","saveItem","text","label","editing","addItem","newItem","onToggleCompleted","oldItem","console","log","completed","onToggleEditing","clearCompleted","filter","filterChange","status","checked","date","Date","filterTask","arr","render","active","renderTodo","className","children","onItemAdded","fileName","_jsxFileName","lineNumber","columnNumber","todos","onDeleted","onChange","length"],"sources":["C:/teah/Todo/src/components/app/app.js"],"sourcesContent":["import React, { Component } from 'react'\n\nimport NewTaskForm from '../new-task-form'\nimport Footer from '../footer'\nimport TaskList from '../task-list'\n\nexport default class App extends Component {\n  maxId = 1\n  state = {\n    todoData: [\n      this.createTaskItem('coffe', '10', '11'),\n      this.createTaskItem('coffes'),\n      this.createTaskItem('coffesen'),\n    ],\n    statusFilter: 'All',\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id)\n\n      const newArr = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n  updateItem = (id, min, sec) => {\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData].map((item) => {\n        if (item.id === id) {\n          item.sec = sec\n          item.min = min\n        }\n        return item\n      })\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n  saveItem = (id, text) => {\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData].map((item) => {\n        if (item.id === id) {\n          item.label = text\n          item.editing = false\n        }\n        return item\n      })\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n\n  addItem = (text, min, sec) => {\n    const newItem = this.createTaskItem(text, min, sec)\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newItem]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n\n  createTaskItem(label, min, sec) {\n    return {\n      label,\n      editing: false,\n      completed: false,\n      checked: false,\n      id: this.maxId++,\n      date: new Date(),\n      min,\n      sec,\n    }\n  }\n\n  onToggleCompleted = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id)\n      const oldItem = todoData[idx]\n      console.log(oldItem)\n      const newItem = {\n        ...oldItem,\n        completed: !oldItem.completed,\n      }\n      console.log(newItem)\n      const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n  onToggleEditing = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id)\n      const oldItem = todoData[idx]\n      const newItem = { ...oldItem, editing: !oldItem.editing }\n      const newArr = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n  clearCompleted = () => {\n    this.setState(({ todoData }) => {\n      const completed = todoData.filter((item) => {\n        return !item.completed\n      })\n      return {\n        todoData: completed,\n      }\n    })\n  }\n\n  filterChange = (status) => {\n    this.setState({\n      statusFilter: status,\n    })\n  }\n\n  filterTask(arr, status) {\n    if (status !== 'All') {\n      const newArr = arr.filter((item) => {\n        if (status === 'Active') {\n          return !item.completed\n        }\n        return item.completed\n      })\n      return newArr\n    }\n    return arr\n  }\n\n  render() {\n    const active = this.state.todoData.filter((item) => !item.completed && !item.editing)\n    const { todoData, statusFilter } = this.state\n    const renderTodo = this.filterTask(todoData, statusFilter)\n    return (\n      <section className=\"todoapp\">\n        <NewTaskForm onItemAdded={this.addItem} />\n        <section className=\"main\">\n          <TaskList\n            todos={renderTodo}\n            updateItem={this.updateItem}\n            onDeleted={this.deleteItem}\n            onChange={this.onChange}\n            saveItem={this.saveItem}\n            onToggleCompleted={this.onToggleCompleted}\n            onToggleEditing={this.onToggleEditing}\n          />\n          <Footer\n            filterChange={this.filterChange}\n            clearCompleted={this.clearCompleted}\n            active={active.length}\n            statusFilter={statusFilter}\n          />\n        </section>\n      </section>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}